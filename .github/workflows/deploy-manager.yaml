name: deploy-manager

on:
  workflow_dispatch:
    inputs:
      type:
        description: "deploy service or infra"
        required: true
        default: "service"
        type: "choice"
        options:
          - "service"
          - "infra"

      env:
        description: "environment name"
        required: true
        default: "prd"
        type: choice
        options:
          - dev
          - prd

      image_digest:
        description: "image version"
        required: false
        default: ""

      stack:
        description: "infra stack"
        required: false
        type: choice
        options:
          - CdkStack
          - EcsStack
          - EcrStack
          - None
jobs:
  deploy-service:
    if: github.event.inputs.type == 'service'
    runs-on: ubuntu-latest
    steps:
      - name: check inputs
        run: |
          echo "${{ github.event.inputs.type }}"
          echo "${{ github.event.inputs.env }}"
          echo "${{ github.event.inputs.image_version }}"
          echo "${{ github.event.inputs.stack }}"

      - run: echo "not yet"

  deploy-infra:
    if: github.event.inputs.type == 'infra' && github.event.inputs.stack !== 'None'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: check inputs
        run: |
          echo "${{ github.event.inputs.type }}"
          echo "${{ github.event.inputs.env }}"
          echo "${{ github.event.inputs.image_version }}"
          echo "${{ github.event.inputs.stack }}"

      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          package_json_file: ./packages/cdk/package.json

      - run: pnpm i --frozen-lockfile
        working-directory: ./packages/cdk

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE_ARN }}
          aws-region: ap-northeast-2

      - run: pnpm cdk deploy ${{ github.event.inputs.stack }} -c env=${{ github.event.inputs.env }} -c imageDigest=${{ github.event.inputs.image_digest }} --require-approval never
        working-directory: ./packages/cdk
